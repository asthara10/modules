name: Nightly update module version
on:
  pull_request:
    # For testing purposes
    branches: [master]
  schedule:
    # https://crontab.guru/every-night-at-midnight
    - cron: "0 0 * * *"

jobs:
  update_modules:
    name: update modules
    if: >
      github.repository == 'nf-core/modules'
    runs-on: ubuntu-20.04
    outputs:
      # Expose matched filters as job 'modules' output variable
      modules: ${{ steps.filter.outputs.update_modules }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Set up JDK 11
        uses: actions/Setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install pip
        run: python -m pip install --upgrade pip

      - name: Install nf-core tools  development version
        run: python -m pip install --upgrade --force-reinstall git+https://github.com/nf-core/tools.git@refs/pull/1671/head

      - name: Install Nextflow
        env:
          CAPSULE_LOG: none
        run: |
          wget -qO- get.nextflow.io | bash
          sudo mv nextflow /usr/local/bin/

      - name: Update modules version
        continue-on-error: true
        run: nf-core modules lint --all --fix-version

      - uses: actions/cache@v2
        with:
          path: /usr/local/bin/nextflow
          key: ${{ runner.os }}
          restore-keys: |
            ${{ runner.os }}

      - uses: dorny/paths-filter@v2
        id: filter
        with:
          # Detect staged and unstaged local changes
          base: HEAD
          filters: "tests/config/pytest_modules.yml"

  push_changes:
    runs-on: ubuntu-latest
    name: Update module ${{ matrix.tags }} version
    needs: update_modules
    if: needs.update_modules.outputs.modules != '[]'
    strategy:
      fail-fast: false
      matrix:
        tags: ["${{ needs.update_modules.outputs.modules && fromJson(needs.update_modules.outputs.modules) }}"]
    steps:
      - uses: actions/checkout@v3

      - uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.NF_CORE_BOT_AUTH_TOKEN }}
          title: "[AUTO UPDATE] Update module ${{ matrix.tags }} version"
          body: "Created by GitHub action 'Nightly update module version'"
          base: master
          branch: "${{ matrix.tags }}"
          add-paths: "${{ matrix.tags }}/*"
          delete-branch: true
