name: "merquryfk_merquryfk"
description: FastK based version of Merqury
keywords:
  - Merqury
  - reference-free
  - assembly evaluation
tools:
  - "merquryfk":
      description: "FastK based version of Merqury"
      homepage: "https://github.com/thegenemyers/MERQURY.FK"
      tool_dev_url: "https://github.com/thegenemyers/MERQURY.FK"
      licence: "https://github.com/thegenemyers/MERQURY.FK/blob/main/LICENSE"
      identifier: ""
input:
  - - meta:
        type: map
        description: |
          Groovy Map containing sample information
          e.g. [ id:'test', single_end:false ]
    - fastk_hist:
        type: file
        description: A histogram files from the program FastK
        pattern: "*.hist"
    - fastk_ktab:
        type: file
        description: Histogram ktab files from the program FastK (option -t)
        pattern: "*.ktab*"
    - assembly:
        type: file
        description: Genome (primary) assembly files (fasta format)
        pattern: ".fasta"
    - haplotigs:
        type: file
        description: Assembly haplotigs (fasta format)
        pattern: ".fasta"
output:
  - stats:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.completeness.stats:
          type: file
          description: Assembly statistics file
          pattern: "*.completeness.stats"
  - bed:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*_only.bed:
          type: file
          description: Assembly only kmer positions not supported by reads in bed format
          pattern: "*_only.bed"
  - assembly_qv:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.qv:
          type: file
          description: "error and qv table for each scaffold of the assembly"
          pattern: "*.qv"
  - spectra_cn_fl_png:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.spectra-cn.fl.png:
          type: file
          description: "Unstacked copy number spectra filled plot in PNG format"
          pattern: "*.spectra-cn.fl.png"
  - spectra_cn_fl_pdf:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.spectra-cn.fl.pdf:
          type: file
          description: "Unstacked copy number spectra filled plot in PDF format"
          pattern: "*.spectra-cn.fl.pdf"
  - spectra_cn_ln_png:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.spectra-cn.ln.png:
          type: file
          description: "Unstacked copy number spectra line plot in PNG format"
          pattern: "*.spectra-cn.ln.png"
  - spectra_cn_ln_pdf:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.spectra-cn.ln.pdf:
          type: file
          description: "Unstacked copy number spectra line plot in PDF format"
          pattern: "*.spectra-cn.ln.pdf"
  - spectra_cn_st_png:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.spectra-cn.st.png:
          type: file
          description: "Stacked copy number spectra line plot in PNG format"
          pattern: "*.spectra-cn.st.png"
  - spectra_cn_st_pdf:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.*.spectra-cn.st.pdf:
          type: file
          description: "Stacked copy number spectra line plot in PDF format"
          pattern: "*.spectra-cn.st.pdf"
  - qv:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.qv:
          type: file
          description: "error and qv of each assembly as a whole"
          pattern: "*.qv"
  - spectra_asm_fl_png:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.spectra-asm.fl.png:
          type: file
          description: "Unstacked assembly spectra filled plot in PNG format"
          pattern: "*.spectra-asm.fl.png"
  - spectra_asm_fl_pdf:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.spectra-asm.fl.pdf:
          type: file
          description: "Unstacked assembly spectra filled plot in PDF format"
          pattern: "*.spectra-asm.fl.pdf"
  - spectra_asm_ln_png:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.spectra-asm.ln.png:
          type: file
          description: "Unstacked assembly spectra line plot in PNG format"
          pattern: "*.spectra-asm.ln.png"
  - spectra_asm_ln_pdf:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.spectra-asm.ln.pdf:
          type: file
          description: "Unstacked assembly spectra line plot in PDF format"
          pattern: "*.spectra-asm.ln.pdf"
  - spectra_asm_st_png:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.spectra-asm.st.png:
          type: file
          description: "Stacked assembly spectra line plot in PNG format"
          pattern: "*.spectra-asm.st.png"
  - spectra_asm_st_pdf:
      - meta:
          type: map
          description: |
            Groovy Map containing sample information
            e.g. [ id:'test', single_end:false ]
      - ${prefix}.spectra-asm.st.pdf:
          type: file
          description: "Stacked assembly spectra line plot in PDF format"
          pattern: "*.spectra-asm.st.pdf"
  - versions:
      - versions.yml:
          type: file
          description: File containing software versions
          pattern: "versions.yml"
authors:
  - "@mahesh-panchal"
maintainers:
  - "@mahesh-panchal"
