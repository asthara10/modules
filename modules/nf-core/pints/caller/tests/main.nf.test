nextflow_process {

    name "Test Process PINTS_CALLER"
    script "../main.nf"
    config "./nextflow.config"
    process "PINTS_CALLER"

    tag "modules"
    tag "modules_nfcore"
    tag "pints"
    tag "pints/caller"

    test("test_pints_caller") {


        when {
            process {
                """
                
                input[0] = [
        [ id:'test', single_end:false ], // meta map
        // FIXME Fails if it doesn't find any signals
        [file("https://raw.githubusercontent.com/Kraus-Lab/groHMM/master/inst/extdata/S0mR1.bam", checkIfExists: true),
         file("https://raw.githubusercontent.com/Kraus-Lab/groHMM/master/inst/extdata/S40mR1.bam", checkIfExists: true)]
    ]

                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match("versions") }
                { assert snapshot(process.out).match() }
            )
        }

    }

    test("test_pints_caller_empty_results") {
        when {
            process {
                """
                        input[0] = [
        [ id:'test', single_end:false ], // meta map
        file(params.test_data['sarscov2']['illumina']['test_paired_end_sorted_bam'], checkIfExists: true)
    ]


                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out.versions).match("versions") }
                { assert snapshot(process.out).match() }
            )
        }
    }
    
}
